{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tysonic/Projects/zuku_mobile/Accounts/resetPassword.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"../styles\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.handleEmail = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePassword = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.handleConfirmPassword = function (confirmpassword) {\n      _this.setState({\n        confirmpassword: confirmpassword\n      });\n    };\n\n    _this.handleSubmitEmail = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isloading: true\n      });\n\n      fetch('https://zuku-backend.herokuapp.com/account check', {\n        method: 'post',\n        body: JSON.stringify(_this.state),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        [_this.setState({\n          isloading: false\n        }), data.result === 'success' ? _this.setState({\n          email: data.email,\n          result: 'success'\n        }) : _this.setState({\n          result: null,\n          message: true,\n          invalidEmail: data.email\n        })];\n      });\n    };\n\n    _this.handleResetPassword = function (e) {\n      _this.setState({\n        isloading: true\n      });\n\n      e.preventDefault();\n      fetch('https://zuku-backend.herokuapp.com/reset password', {\n        method: 'post',\n        body: JSON.stringify(_this.state),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.text();\n      }).then(function (data) {\n        [_this.setState({\n          isloading: false\n        }), _this.props.navigation.navigate(\"Login\"), console.log(data)];\n      });\n    };\n\n    _this.state = {\n      isloading: false,\n      result: null,\n      email: null,\n      message: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 1\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/z.jpeg\"),\n        style: {\n          marginTop: 0,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }\n      }), this.state.isloading === true ? React.createElement(ActivityIndicator, {\n        size: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 35\n        }\n      }) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }\n      }, this.state.result === null ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }\n      }, this.state.message === false ? React.createElement(Text, {\n        style: [styles.heading, {\n          color: 'white'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, \"Enter email address\") : React.createElement(Text, {\n        style: [styles.heading, {\n          color: 'white'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, \"Email \", this.state.invalidEmail, \", \", '\\n', \"is not registered\"), React.createElement(TextInput, {\n        placeholder: \"Email\",\n        keyboardType: 'email-address',\n        onChangeText: this.handleEmail,\n        style: styles.inputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 128\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.passwordReset,\n        onPress: this.handleSubmitEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"Submit\"))) : React.createElement(View, {\n        style: {\n          marginTop: '10%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: this.handlePassword,\n        style: styles.inputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 121\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true,\n        onChangeText: this.handleConfirmPassword,\n        style: styles.inputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 136\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.passwordReset,\n        onPress: this.handleResetPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/tysonic/Projects/zuku_mobile/Accounts/resetPassword.js"],"names":["React","styles","App","props","handleEmail","email","setState","handlePassword","password","handleConfirmPassword","confirmpassword","handleSubmitEmail","e","preventDefault","isloading","fetch","method","body","JSON","stringify","state","headers","then","res","json","data","result","message","invalidEmail","handleResetPassword","text","navigation","navigate","console","log","require","marginTop","width","heading","color","inputs","passwordReset","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {View,Text,TextInput,TouchableOpacity,Image,ActivityIndicator,ScrollView} from 'react-native'\nimport {styles} from '../styles'\n\nexport default class App extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isloading:false,\n            result:null,\n            email:null,\n            message:false,\n    }\n\n    }\n    \n\n    handleEmail = (email)=> {this.setState({email})}\n    handlePassword = (password) => {this.setState({ password })}\n    handleConfirmPassword = (confirmpassword) => {this.setState({ confirmpassword })}\n    handleSubmitEmail=(e)=>{\n        e.preventDefault()\n        this.setState({isloading:true})\n        fetch('https://zuku-backend.herokuapp.com/account check',\n        {\n            method:'post',\n            body:JSON.stringify(this.state),\n            headers:{'content-type':'application/json'}\n        }).then(\n            res =>res.json()\n        ).then(\n            data =>{\n                [this.setState({isloading:false})\n                ,data.result==='success' ? \n                this.setState({email:data.email,result:'success'}) : \n                this.setState({result:null,message:true,invalidEmail:data.email}) \n                ]\n            })\n        }\n\n\n        handleResetPassword=(e)=>{\n            this.setState({isloading:true}) \n            e.preventDefault()\n            fetch('https://zuku-backend.herokuapp.com/reset password',\n        {\n            method:'post',\n            body:JSON.stringify(this.state),\n            headers:{'content-type':'application/json'}\n        }).then(\n            res =>res.text()\n        ).then(\n            data =>{\n                [this.setState({isloading:false}), this.props.navigation.navigate(\"Login\"),console.log(data)  ]         \n            })\n        }\n       \n    render(){\n        \n        return(\n<ScrollView >\n\n    <Image source={require('../assets/z.jpeg')} style={{marginTop:0,width:\"100%\"}} />\n    {this.state.isloading===true ?<ActivityIndicator size={200}/> :\n    <View>\n    {this.state.result===null ? \n    <View>\n        {this.state.message===false?\n        <Text style={[styles.heading,{color:'white'}]}>Enter email address</Text>\n        :\n        <Text style={[styles.heading,{color:'white'}]}>Email {this.state.invalidEmail}, {'\\n'}is not registered</Text>\n        }\n        \n        <TextInput placeholder=\"Email\"  keyboardType={'email-address'} onChangeText={this.handleEmail} style={styles.inputs} /><Text/>\n    \n        <TouchableOpacity  style={styles.passwordReset}\n            onPress={this.handleSubmitEmail}>\n            <Text style={{color:'white'}}>Submit</Text>\n        </TouchableOpacity>\n    </View>\n    : \n    <View style={{marginTop:'10%'}}>\n    <TextInput placeholder=\"Password\" secureTextEntry={true} onChangeText={this.handlePassword} style={styles.inputs} /><Text/>\n    <TextInput placeholder=\"Confirm Password\" secureTextEntry={true} onChangeText={this.handleConfirmPassword} style={styles.inputs} /><Text/>\n    <TouchableOpacity  style={styles.passwordReset}\n            onPress={this.handleResetPassword}>\n            <Text style={{color:'white'}}>Submit</Text>\n        </TouchableOpacity>\n    </View>\n    }\n\n\n\n\n        </View>\n    }\n\n</ScrollView>\n)\n}\n}"]},"metadata":{},"sourceType":"module"}