{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/tysonic/Projects/zuku_mobile/services/internetOnly.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport { styles } from \"../styles\";\n\nvar Example = function (_Component) {\n  _inherits(Example, _Component);\n\n  var _super = _createSuper(Example);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function (e) {\n      console.log(_this.state);\n      fetch('https://zuku-backend.herokuapp.com/installations', {\n        method: 'POST',\n        body: JSON.stringify(_this.state),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function () {\n        return _this.props.navigation.navigate('ClientInstallationServiceDetails');\n      });\n    };\n\n    _this.services = global.services.services;\n\n    _this.serviceloop = function () {\n      var service = [];\n\n      for (var x = 0; x < _this.services.length; x++) {\n        if (_this.services[x].package === \"Internet only\") {\n          service.push(_this.services[x]);\n        }\n      }\n\n      return service;\n    };\n\n    _this.showAlert1 = function () {\n      console.log(global.services.services);\n      Alert.alert(\"Dear \" + global.user + ',', 'You are applying for :\\n' + _this.state.package + \"\\n\" + 'of ' + _this.state.band + '\\n' + 'At ' + _this.state.amount + 'Ugx' + '\\n' + 'click Submit, to send else cancle\\n', [{\n        text: 'Cancel',\n        onPress: function onPress() {},\n        style: 'cancel'\n      }, {\n        text: 'Submit',\n        onPress: function onPress() {\n          return _this.handleSubmit();\n        }\n      }]);\n    };\n\n    _this.state = {\n      service: []\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.logout,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Services\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.serviceGroupText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }\n      }, \"More Services\")), React.createElement(FlatGrid, {\n        itemDimension: 130,\n        data: this.serviceloop().sort(function (a, b) {\n          return a.amount.toString().localeCompare(b.amount.toString());\n        }),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.state.service = item.id, _this2.state.amount = item.amount, _this2.state.band = item.band, _this2.state.package = item.package, _this2.state.client = global.services.id, _this2.showAlert1();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 11\n            }\n          }, React.createElement(View, {\n            style: styles.serviceContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: styles.serviceItemText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }\n          }, item.package + '\\n'), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          }, item.band + '\\n'), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          }, 'At ' + item.amount + 'Ugx'))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Example;\n}(Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/home/tysonic/Projects/zuku_mobile/services/internetOnly.js"],"names":["React","Component","FlatGrid","styles","Example","props","handleSubmit","e","console","log","state","fetch","method","body","JSON","stringify","headers","then","response","json","navigation","navigate","services","global","serviceloop","service","x","length","package","push","showAlert1","Alert","alert","user","band","amount","text","onPress","style","logout","serviceGroupText","sort","a","b","toString","localeCompare","item","index","id","client","serviceContainer","serviceItemText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Alert,FlatList, ScrollView, View, Text, ActivityIndicator, TouchableOpacity} from 'react-native';\nimport { FlatGrid } from 'react-native-super-grid';\nimport {styles} from '../styles'\n\nexport default class Example extends Component {\n\n    constructor(props) {\n        super (props);\n        this.state = {service:[]}\n     }\n     \nhandleSubmit = (e)=>{\n  console.log(this.state)\n  fetch('https://zuku-backend.herokuapp.com/installations',\n  {\n    method: 'POST',\n    body: JSON.stringify(this.state),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n  .then(\n   response => response.json()\n  ).then(()=>this.props.navigation.navigate('ClientInstallationServiceDetails'))\n\n}\n\nservices = global.services.services\nserviceloop =()=>{\n    let service=[]\nfor (let x=0;x<this.services.length;x++){\n    if(this.services[x].package===\"Internet only\"){\n        service.push(this.services[x])\n    }\n}\nreturn(service)\n}\n\nshowAlert1=()=> {\n    \nconsole.log(global.services.services)\n  Alert.alert(\n      \"Dear \" + global.user + ',',\n      'You are applying for :\\n'+\n      this.state.package + \"\\n\"+\n      'of ' +this.state.band + '\\n'+\n      'At ' +this.state.amount +'Ugx' + '\\n'+\n      'click Submit, to send else cancle\\n',\n      [\n          {\n              text: 'Cancel',\n              onPress: () => {},\n              style: 'cancel',\n          },\n          {text: 'Submit', onPress: () => this.handleSubmit()},\n      ]\n  );\n}\n\n\n  render() {\n    \n    return (\n     \n        <View>\n\n        \n        <TouchableOpacity  style={styles.logout} \n          onPress={()=>this.props.navigation.navigate(\"Services\")}>\n           <Text style={styles.serviceGroupText}>More Services</Text>\n        </TouchableOpacity>\n       \n      <FlatGrid\n        itemDimension={130}\n        data={this.serviceloop().sort((a,b)=>a.amount.toString().localeCompare(b.amount.toString()))}\n\n        renderItem={({ item, index }) => (\n          <TouchableOpacity onPress={()=>(\n\n            this.state.service=item.id,\n            this.state.amount = item.amount,\n            this.state.band=item.band,\n            this.state.package = item.package,\n            this.state.client=global.services.id,\n            this.showAlert1()\n            )}>\n\n          <View style={styles.serviceContainer}>\n            <Text style={styles.serviceItemText}>\n            <Text >{item.package + '\\n'}</Text>\n                <Text >{item.band +'\\n'}</Text>\n                <Text>{'At '+item.amount +'Ugx'}</Text>\n            </Text>\n          </View>\n          </TouchableOpacity>\n        )}\n      />\n      </View>\n      )}\n\n}\n\n"]},"metadata":{},"sourceType":"module"}